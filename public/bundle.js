(()=>{var OpenMargonemAddonInputGetValue=(addon,option)=>{const uniqueId=`openmargonem-addons-${addon.id}-${option.optionKey}`;const val=localStorage.getItem(uniqueId);if(val===null){return option.default}return parseInt(val)};var OpenMargonemAddonInput=(addon,option)=>{const addonLang=addon[_l()];const uniqueId=`openmargonem-addons-${addon.id}-${option.optionKey}`;const value=OpenMargonemAddonInputGetValue(addon,option);const wrapper=document.createElement("div");const input=document.createElement("input");const label=document.createElement("label");const br=document.createElement("br");let rangeSpan=null;input.setAttribute("id",uniqueId);input.setAttribute("name",option.optionKey);input.setAttribute("type",option.type);input.setAttribute("value",String(value));label.setAttribute("for",uniqueId);if(option.type==="range"){rangeSpan=document.createElement("span");rangeSpan.setAttribute("id",`${uniqueId}-range`);rangeSpan.textContent=String(value);input.setAttribute("min",String(option.min));input.setAttribute("max",String(option.max));label.append(rangeSpan)}label.innerHTML+=addonLang.optionTranslations[option.optionKey];input.setAttribute("oninput",`localStorage.setItem('${uniqueId}', this.value);const label = document.getElementById('${uniqueId}-range');if (label !== null) {label.textContent = this.value;}`);wrapper.append(br,input,label);return wrapper.innerHTML};var OpenMargonemAddonCreate=addon=>{const addonLang=addon[_l()];for(let option of addon.addonOptions){addonLang.description+=OpenMargonemAddonInput(addon,option)}window.Engine.addonsPanel.createOneAddonOnList(addon,addon.id);window.Engine.addonsPanel.createOneAddonDescription(addon,addon.id);const active=window.Engine.addonsPanel.getStorageStateOfAddon(addon.id);window.Engine.addonsPanel.setStateAddon(addon,active,addon.id,void 0,void 0)};var OpenMargonemAddonSetup=()=>{const originalGetStorageStateOfAddon=window.Engine.addonsPanel.getStorageStateOfAddon;window.Engine.addonsPanel.getStorageStateOfAddon=id=>{if(id.startsWith("openmargonem")){let active=localStorage.getItem(`openmargonem-addons-${id}-active`);if(active!==null){return true}return false}return originalGetStorageStateOfAddon(id)};const originalSetStateAddon=window.Engine.addonsPanel.setStateAddon;window.Engine.addonsPanel.setStateAddon=(addon,active,id,p1,p2)=>{if(id.startsWith("openmargonem")){if(active){localStorage.setItem(`openmargonem-addons-${id}-active`,"1");addon.install()}else{localStorage.removeItem(`openmargonem-addons-${id}-active`);addon.uninstall()}window.Engine.addonsPanel.setButtonState(addon.id,active);window.Engine.addonsPanel.setWindgetColor(addon.id,active);return}return originalSetStateAddon(addon,active,id,p1,p2)};const originalStartAddonScript=window.Engine.addonsPanel.startAddonScript;window.Engine.addonsPanel.startAddonScript=(addon,id,active,p1)=>{if(id.startsWith("openmargonem")){return}return originalStartAddonScript(addon,id,active,p1)}};var OpenMargonemAddonAutoHealOptMinHealth={optionKey:"OpenMargonemAddonAutoHealOptMinHealth",type:"range",default:90,max:100,min:1};var OpenMargonemAddonAutoHealOptUseConsumable={optionKey:"OpenMargonemAddonAutoHealOptUseConsumable",type:"checkbox",default:1,max:null,min:null};var OpenMargonemAddonAutoHealInstall=()=>{console.log("hello from OpenMargonemAddonAutoHealInstall")};var OpenMargonemAddonAutoHealUninstall=()=>{console.log("hello from OpenMargonemAddonAutoHealUninstall")};var OpenMargonemAddonAutoHealSetup=()=>{const autoHeal={pl:{name:"OM AutoHeal",description:"OpenMargonem AutoHeal<br/>",optionTranslations:{OpenMargonemAddonAutoHealOptMinHealth:"<br/>Minimalna procentowa ilo\u015B\u0107 zdrowia<br/>",OpenMargonemAddonAutoHealOptUseConsumable:"U\u017Cywaj przemiot\xF3w konsumpcyjnych"}},en:{name:"OM AutoHeal",description:"OpenMargonem AutoHeal<br/>",optionTranslations:{OpenMargonemAddonAutoHealOptMinHealth:"<br/>Minimum health percentage allowed<br/>",OpenMargonemAddonAutoHealOptUseConsumable:"Use consumable items"}},image:"/img/gui/addons-icons.png|-376 -34",options:false,addonOptions:[OpenMargonemAddonAutoHealOptMinHealth,OpenMargonemAddonAutoHealOptUseConsumable],id:"openmargonem-1",install:OpenMargonemAddonAutoHealInstall,uninstall:OpenMargonemAddonAutoHealUninstall};OpenMargonemAddonCreate(autoHeal)};var OpenMargonemRun=()=>{console.log(`start OpenMargonemRun`);OpenMargonemAddonSetup();OpenMargonemAddonAutoHealSetup()};var OpenMargonemSetup=setInterval(()=>{if(typeof window.Engine=="undefined"){console.info("window.Engine is not ready, sleeping...");return}if(!("addonsPanel"in window.Engine)){console.info("window.Engine.addonsPanel is not ready, sleeping...");return}if(window.Engine.addonsPanel===null){console.log("window.Engine.addonsPanel is not ready, sleeping...");return}clearInterval(OpenMargonemSetup);OpenMargonemRun()},100);})();
/*!
openmargonem  
Copyright (C) 2024  Rafa≈Ç Safin <rafal.safin@rafsaf.pl>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.

Source code: https://github.com/rafsaf/openmargonem
*/
